package supersql;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;

import org.apache.log4j.Logger;

import supersql.sql.templates.factory.Options;

public abstract class ScriptProducer
{
	StringBuffer sb;
	Options outputOptions;

	private static Logger log = Logger.getLogger(ScriptProducer.class);

	public ScriptProducer(Options outputOptions)
	{
		super();
		this.outputOptions = outputOptions;
	}

	public String produce()
	{
		sb = new StringBuffer();
		try
		{
			tryProduce();
		} catch (Exception e)
		{
			StringWriter sw = new StringWriter();
			PrintWriter p = new PrintWriter(sw);
			sb.append(SuperSqlEvents.getInstance().getErrorSummary());
			sb.append("\nAre you sure this is Oracle SQL ? /!\\ ONLY ORACLE SQL CAN BE PARSED WITH THIS TOOL /!\\ (actually only a subset included that generated by PowerAMC)");
			e.printStackTrace(p);
			sb.append('\n');
			sb.append(sw.getBuffer());
		}
		if (SuperSqlEvents.getInstance().hasErrors())
		{
			log.warn(SuperSqlEvents.getInstance().getErrorSummary());
			try
			{
				writeInput();

			} catch (IOException e)
			{
				log.error(e);
			} finally
			{
				closeStream();
			}
		}
		return sb.toString();
	}

	protected abstract void writeInput() throws IOException;

	protected abstract void closeStream();

	protected abstract void tryProduce() throws Exception;

}
